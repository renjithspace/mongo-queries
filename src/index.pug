doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    meta(http-equiv="X-UA-Compatible", content="ie=edge")
    title Mongo Queries
    link(rel="stylesheet", href="app.sass")
    link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Nanum+Gothic+Coding:400,700")
  body
    .grid
      .queries.col
        h2 Queries
        p Just click on query code block to execute
        
        .wrapper
          .query(data-query="insertOne")
            h4 Insert one
            pre
              code.language-js
                | const book = {
                |   title: 'One Indian Girl',
                |   author: 'Chetan Bhagat',
                |   price: 176,
                |   available: true,
                |   created: new Date()
                | }
                |
                | db.collection('books').insertOne(book)

          .query(data-query="insertMany")
            h4 Insert many
            pre
              code.language-js
                | const books = [
                |   {
                |     title: 'Sita - Warrior of Mithila',
                |     author: 'Amish',
                |     price: 350,
                |     available: true,
                |     created: new Date()
                |   },
                |   {
                |     title: 'The Girl in Room 105',
                |     author: 'Chetan Bhagat',
                |     price: 199,
                |     available: false,
                |     created: new Date()
                |   }
                | ]
                |
                | db.collection('books').insertMany(books)

          .query(data-query="insertDocument")
            h4 Insert document
            pre
              code.language-js
                | const book = {
                |   title: 'One Indian Girl',
                |   author: 'Chetan Bhagat',
                |   price: 176,
                |   available: true,
                |   created: new Date()
                | }
                |
                | db.collection('books').insert(book)
          
          .query(data-query="insertArrayOfDocuments")
            h4 Insert Array of documents
            pre
              code.language-js
                | const books = [
                |   {
                |     title: 'Sita - Warrior of Mithila',
                |     author: 'Amish',
                |     price: 350,
                |     available: true,
                |     created: new Date()
                |   },
                |   {
                |     title: 'The Girl in Room 105',
                |     author: 'Chetan Bhagat',
                |     price: 199,
                |     available: false,
                |     created: new Date()
                |   }
                | ]
                |
                | db.collection('books').insert(books)

          .query(data-query="insertWithId")
            h4 Insert with ID
            pre
              code.language-js
                | const book = {
                |   _id: 1,
                |   title: 'One Indian Girl',
                |   author: 'Chetan Bhagat',
                |   price: 176,
                |   available: true,
                |   created: new Date()
                | }
                |
                | db.collection('books').insert(book)

          .query(data-query="findOne")
            h4 Find one
            pre
              code.language-js
                | const query = { author: 'Amish' }
                |
                | db.collection('books').findOne(query)
          
          .query(data-query="find")
            h4 Find
            pre
              code.language-js
                | const query = { price: 350 }
                |
                | db.collection('books').find(query).toArray()
          
          .query(data-query="findAll")
            h4 Find all
            pre
              code.language-js
                | db.collection('books').find().toArray()

          .query(data-query="findWithExcludeFields")
            h4 Find with exculde fields
            pre
              code.language-js
                | const fields = { _id: false, created: false }
                |
                | db.collection('books').find().preject(fields).toArray()

          .query(data-query="findWithIncludeFields")
            h4 Find with include fields
            pre
              code.language-js
                | const fields = { title: true, author: true }
                |
                | db.collection('books').find().project(fields).toArray()

          .query(data-query="findWithEqual")
            h4 Find with equal
            pre
              code.language-js
                | const query = { price: { $eq: 199 } }
                |
                | db.collection('books').find(query).toArray()

          .query(data-query="findWithNotEqual")
            h4 Find with not equal
            pre
              code.language-js
                | const query = { price: { $ne: 199 } }
                |
                | db.collection('books').find(query).toArray()

          .query(data-query="findWithGreaterThan")
            h4 Find with greater than
            pre
              code.language-js
                | const query = { price: { $gt: 199 } }
                |
                | db.collection('books').find(query).toArray()

          .query(data-query="findWithGreaterThanOrEqual")
            h4 Find with greater than or equal
            pre
              code.language-js
                | const query = { price: { $gte: 199 } }
                |
                | db.collection('books').find(query).toArray()

          .query(data-query="findWithLessThan")
            h4 Find with less than
            pre
              code.language-js
                | const query = { price: { $lt: 199 } }
                |
                | db.collection('books').find(query).toArray()

          .query(data-query="findWithLessThanOrEqual")
            h4 Find with less than or equal
            pre
              code.language-js
                | const query = { price: { $lte: 199 } }
                |
                | db.collection('books').find(query).toArray()

          .query(data-query="findWithMatchesAnyValues")
            h4 Find with matches any of the values
            pre
              code.language-js
                | const query = { price: { $in: [199, 350] } }
                |
                | db.collection('books').find(query).toArray()

          .query(data-query="findWithMatchesNoneValues")
            h4 Find with matches none of the values
            pre
              code.language-js
                | const query = { price: { $nin: [199, 350] } }
                |
                | db.collection('books').find(query).toArray()

          .query(data-query="findWithRanges")
            h4 Find with specify ranges
            pre
              code.language-js
                | const query = { price: { $gt: 100, $lt: 200 } }
                |
                | db.collection('books').find(query).toArray()

          .query(data-query="findWithSort")
            h4 Find with sort
            pre
              code.language-js
                | db.collection('books').find().sort({ price: 1 }).toArray()

          .query(data-query="findWithLimit")
            h4 Find with limit
            pre
              code.language-js
                | db.collection('books').find().limit(5).toArray()

          .query(data-query="findWithSortAndLimit")
            h4 Find with sort and limit
            pre
              code.language-js
                | db.collection('books')
                |   .find()
                |   .sort({ price: -1 })
                |   .limit(5)
                |   .toArray()

          .query(data-query="updateDocument")
            h4 Update document
            pre
              code.language-js
                | const filter = { price: 176 }
                | const update = { $set: { price: 150 } }
                |
                | db.collection('books').update(filter, update)

          .query(data-query="updateMultipleDocuments")
            h4 Update multiple documents
            pre
              code.language-js
                | const filter = { price: 176 }
                | const update = { $set: { price: 150 } }
                |
                | db.collection('books').update(filter, update, { multi: true})

          .query(data-query="updateOne")
            h4 Update one
            pre
              code.language-js
                | const filter = { price: 176 }
                | const update = { $set: { price: 150 } }
                |
                | db.collection('books').updateOne(filter, update)

          .query(data-query="updateMany")
            h4 Update many
            pre
              code.language-js
                | const filter = { price: 350 }
                | const update = { $set: { price: 340 } }
                |
                | db.collection('books').updateMany(filter, update)
              
      .collection.col
        h2 Collection
        p
          | The 
          strong books 
          | collection disply here
        .wrapper
          .code
            pre
              code#collection.language-js

      .result.col
        h2 Result
        p Query results disply here
        .wrapper
          .code
            pre
              code#result.language-js
    
    script(src="app.js")